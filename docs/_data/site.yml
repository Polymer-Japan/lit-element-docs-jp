title: LitElement Documentation
toc:
  try: 
    # title: Try LitElement
    title: 試してみる
    # desc: A quick tutorial with interactive code samples.
    desc: オンラインエディタを使用したクイックチュートリアル
    url: /try/
    toc: 
      create:
        # title: 1. Create
        title: 1. つくる
        url: /try/create
      import:
        # title: 2. Import
        title: 2. インポート
        url: /try/import
      properties:
        # title: 3. Properties
        title: 3. プロパティ
        url: /try/properties
      logic: 
        # title: 4. Logic
        title: 4. ロジック
        url: /try/logic
      events:
        # title: 5. Events
        title: 5. イベント
        url: /try/events
      style: 
        # title: 6. Style
        url: /try/style
        title: 6. スタイル
  docs:
    # title: Documentation
    title: ドキュメント
    # desc: LitElement is a simple base class for creating fast, lightweight web components that work in any web page with any framework.
    desc: LitElementは、どんなフレームワークのどんなWebページでも動作し、軽量で高速なWebコンポーネントを開発するためのシンプルなベースクラスです
    url: /docs/
    toc: 
      create:
        # title: Create a component
        title: コンポーネントをつくる
        # desc: Create a new web component with LitElement. Import and use LitElement components in HTML and JavaScript.
        desc: LitElementでWebコンポーネントをつくります。 HTMLかJavaScriptでLitElementをインポートして使う
        url: /docs/create
        toc:
          install: 
            # title: Install LitElement
            title: LitElementのインストール
            url: /docs/create#install
          class:
            # title: Create a new component
            title: 新規でコンポーネントをつくる
            # desc: Create a new class for your web component by extending the LitElement base class.
            desc: LitElementのベースクラスを継承して新規でWebコンポーネントをつくる
            url: /docs/create#class
          typescript:
            # title: Use TypeScript to create a component
            title: コンポーネントをつくるのにTypeScriptを使う
            # desc: Use LitElement TypeScript decorators to create a new class for a LitElement-based component.
            desc: LitElementベースのコンポーネントをつくるのに新規でクラスを生成するTypeScriptデコレータを使う
            url: /docs/create#typescript
          import: 
            # title: Import an element
            title: エレメントのインポート
            # desc: Import your own or third-party LitElement components in HTML or JavaScript.
            desc: HTMLもしくはJavaScirptで独自もしくは他で作られたLitElementのコンポーネントをインポートする
            url: /docs/create#import
      templates: 
        #  title: Templates
        title: テンプレート
        # desc: Create and render LitElement templates. Use JavaScript expressions to add properties and logic.
        desc: LitElementのテンプレートをつくり、描画する。プロパティやロジックを追加するのにJavaScript文を使う
        url: /docs/templates/
        toc: 
          create: 
            # title: Create a template
            title: テンプレートをつくる
            # desc: Define a template and specify where it should render.
            desc: 描画する場所にテンプレートを定義する
            type: task
            url: /docs/templates/create
          expressions:
            # title: Use properties and logic
            title: プロパティをロジックをつかう
            # desc: Use JavaScript expressions to add properties, loops, and conditionals to your templates.
            desc: テンプレートに対してプロパティや繰り返し処理、条件式のJavaScript文を使う
            type: task
            url: /docs/templates/expressions
          databinding:
            # title: Bind data to a child element
            title: 子要素に対して値をバインドする
            # desc: Bind to the text content, properties, attributes, and event handlers of a child element.
            desc: 子要素に対してテキストコンテンツ、プロパティ、属性、イベントハンドラをバインドする
            type: task
            url: /docs/templates/databinding
          compose:
            # title: Compose and nest templates
            title: テンプレートを入れ子にする
            # desc: Compose LitElement templates from other templates.
            desc: LitElementのテンプレートを他のテンプレートの中に含める
            type: task
            url: /docs/templates/compose
          slots:
            # title: Render light DOM children
            title: light DOMの子要素を描画する
            # desc: Use slots to include light DOM children in shadow DOM templates.
            desc: slotを使ってshadow DOMのテンプレートにlight DOMの子要素を含める
            type: task
            url: /docs/templates/slots
          design:
            # title: Template design concepts
            title: テンプレートの設計
            # desc: Concepts for designing templates that render and update efficiently.
            desc: 効率的に描画や更新をするためのテンプレート設計
            type: concept
            url: /docs/templates/design
          syntax:
            # title: Template syntax
            title: テンプレート構文
            # desc: A quick reference to LitElement template syntax.
            desc: LitElementのテンプレート構文のクイックリファレンス
            type: reference
            url: /docs/templates/syntax
      properties: 
        # title: Properties and attributes
        title: プロパティと属性
        # desc: Declare and configure a component's properties and attributes.
        desc: コンポーネントのプロパティと属性の宣言と設定
        url: /docs/properties
        toc:
          declare: 
            # title: Declare properties
            title: プロパティの宣言
            url: /docs/properties#declare
          init: 
            # title: Initialize property values
            title: プロパティの初期化
            url: /docs/properties#init
          type:
            # title: Configure a property type
            title: プロパティの型の設定
            url: /docs/properties#type
          attribute:
            # title: Configure observed attributes
            title: 監視された属性の設定
            url: /docs/properties#attribute
          reflect:
            # title: Configure reflection to attributes
            title: 属性反映の設定
            url: /docs/properties#reflect
          haschanged:
            # title: Evaluate property changes
            title: プロパティの変更を評価する
            url: /docs/properties#haschanged
      lifecycle: 
        # title: Element update lifecycle
        title: エレメントの更新ライフサイクル
        # desc: Specify when an element should update. Respond to updates, or wait for an update to complete.
        desc: エレメントが更新されるべきタイミングを指定する。更新した瞬間か更新が完了したタイミングかなど。
        url: /docs/lifecycle/
        toc:
          about:
            # title: About the element update lifecycle
            title: エレメントの更新ライフサイクルについて
            # desc: Concepts for working with LitElement's asynchronous update lifecycle.
            desc: LitElementの非同期更新サイクルの設計について知る
            type: concept
            url: /docs/lifecycle/about
          customize:
            # title: Customize lifecycle behavior
            title: ライフサイクルの振舞いをカスタマイズする
            # desc: Customize how and when an element should update, and perform additional tasks during any stage of the update lifecycle.
            desc: エレメントがいつどのように更新するべきで、各ライフサイクルの段階でどのように処理が実行されるべきかカスタマイズします
            type: task
            url: /docs/lifecycle/customize
          methods:
            # title: Methods and Promises reference
            title: メソッドとPromiseのリファレンス
            # desc: A reference to the methods and Promises in the LitElement update lifecycle.
            desc: LitElementの更新ライフサイクルにおけるメソッドとPromiseのリファレンス
            type: reference
            url: /docs/lifecycle/methods
  tools:
    # title: Tools
    title: ツール
    # desc: Tools for developing and deploying LitElement projects.
    desc: LitElementを使った開発やデプロイのツール
    url: /tools/
    toc: 
      setup:
        # title: Set up LitElement locally
        title: ローカルにLitElementを使う
        # desc: Set up LitElement for the first time.
        desc: LitElementを使う場合に最初にすること
        url: /tools/setup
      develop:
        # title: Developer tools
        title: デベロッパーツール
        # desc: Tools for developing and working locally with LitElement projects.
        desc: LitElementを使ったローカル開発のツール
        url: /tools/develop
      build: 
        # title: Build for production
        title: 本番向けビルド
        # desc: Get your project ready for deployment to the web.
        desc: 本番サイトへのリリースに向けて準備すること
        url: /tools/build
      sample: 
        # title: Sample project
        title: サンプルプロジェクト
        # desc: Clone, serve, and build a sample LitElement project.
        desc: サンプルプロジェクトをローカルにコピーして確認、ビルドする
        url: /tools/sample
